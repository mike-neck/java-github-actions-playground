name: release

on:
  push:
    tags:
      - v*.*.*

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: set up java
        if: contains(github.ref, 'refs/tags/')
        uses: actions/setup-java@v1
        with:
          java-version: '13.0.2'
      - name: check out
        if: contains(github.ref, 'refs/tags/')
        uses: actions/checkout@v2
  
      - name: cache gradle modules
        if: contains(github.ref, 'refs/tags/')
        uses: actions/cache@v1
        env:
          cache-name: gradle-modules
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle') }}
          restore-keys:
            ${{ runner.os }}-gradle-

      - name: show current branch
        run: git branch

      - name: fetch all tags
        if: contains(github.ref, 'refs/tags/')
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: git tag
        if: contains(github.ref, 'refs/tags/')
        run: git tag --list

      -
        name: show github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: show job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: show steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"


      - name: verify release
        if: contains(github.ref, 'refs/tags/')
        run: ORG_GRADLE_PROJECT_project_version=`echo $EVENT_REF | tr '/' ' ' | awk '{print $3}'` ./gradlew showVersion verifyRelease
        env:
          EVENT_REF: ${{ github.ref }}

      - name: show env
        run: env | sort
  
      - name: show event
        run: cat $GITHUB_EVENT_PATH

      - name: release to project release
        if: contains(github.ref, 'refs/tags/')
        run: ORG_GRADLE_PROJECT_project_version=`echo $EVENT_REF | tr '/' ' ' | awk '{print $3}'` ./gradlew assemble githubRelease
        env:
          EVENT_REF: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release to github packages
        if: contains(github.ref, 'refs/tags/')
        run: ORG_GRADLE_PROJECT_project_version=`echo $EVENT_REF | tr '/' ' ' | awk '{print $3}'` ./gradlew assemble publishGithubPublicationToGithubPackagesRepository
        env:
          EVENT_REF: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_github_user: ${{ github.event.repository.owner.login }}
